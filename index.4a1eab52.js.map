{"mappings":"AAoJA,IAA6BA,IAgBD,GAAjB,CAAC,EAAG,EAAG,EAAG,EAAG,GAddC,SAAQC,IACd,MAAMC,EAAc,GAQpB,OAPID,EAAS,GAAM,GACjBA,GAAUF,EACVG,EAAYC,KAAKF,IAEjBC,EAAYC,KAAKF,GAEnBG,QAAQC,IAAIH,GACLA","sources":["src/index.js"],"sourcesContent":["// const atTheOldToad = {\n//   potions: [\n//     { name: 'Speed potion', price: 460 },\n//     { name: 'Dragon breath', price: 780 },\n//     { name: 'Stone skin', price: 520 },\n//   ],\n//   // Change code below this line\n//   getPotions() {\n//     return this.potions;\n//   },\n//----------------------------------------------------------первый способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   for (const potion of this.potions) {\n//     if (newPotion.name === potion.name) {\n//       console.log(\n//         `Error! Potion ${newPotion.name} is already in your inventory!`\n//       );\n//       return;\n//     }\n//     this.potions.push(newPotion);\n//     console.log(this.potions);\n//   }\n\n//--------------------------------------------------------второй способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   const arrayNames = [];\n//   for (const potion of this.potions) {\n//     arrayNames.push(potion.name);\n//   }\n//   if (arrayNames.includes(newPotion.name)) {\n//     console.log(\n//       `Error! Potion ${newPotion.name} is already in your inventory!`\n//     );\n//     console.log(this.potions);\n//     return;\n//   }\n//   this.potions.push(newPotion);\n//   console.log(this.potions);\n//   return;\n\n// },\n\n//   removePotion(potionName) {\n//     const potionIndex = this.potions.indexOf(potionName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${potionName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1);\n//   },\n//   updatePotionName(oldName, newName) {\n//     const potionIndex = this.potions.indexOf(oldName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${oldName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1, newName);\n//   },\n//   // Change code above this line\n// };\n\n// atTheOldToad.addPotion({ name: 'Speed potion', price: 460 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'Stone skin', price: 520 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n\n// ------------------------------Callback функции---------------------------------------\n\n// const fnA = function (message, callback) {\n//   console.log(message);\n//   console.log(callback);\n// };\n\n// const fnB = function () {\n//   console.log('это лог вызова функции B');\n// };\n\n// fnA('hello my friend', fnB);\n\n// const doMath = function (a, b, callback) {\n//   const result = callback(a, b);\n//   console.log(result);\n// };\n\n// const add = function (x, y) {\n//   return x + y;\n// };\n\n// doMath(2, 14, add);\n\n// // Колбэк-функция\n// function greet(name) {\n//   console.log(`Добро пожаловать ${name}.`);\n// }\n\n// // Функция высшего порядка\n// function registerGuest(name, callback) {\n//   console.log(`Регистрируем гостя ${name}.`);\n//   callback(name);\n// }\n\n// registerGuest('Манго', greet);\n\n// const pizzaPalace = {\n//   pizzas: ['Ultracheese', 'Smoked', 'Four meats'],\n//   order(pizzaName, onSuccess, onError) {\n//     if (this.pizzas.includes(pizzaName)) {\n//       return makePizza();\n//     }\n//     return onOrderError();\n//   },\n// };\n// // Change code above this line\n\n// // Callback for onSuccess\n// const onSuccess = function makePizza(pizzaName) {\n//   console.log(`Your order is accepted. Cooking pizza ${pizzaName}.`);\n// };\n\n// // Callback for onError\n// const onError = function onOrderError(error) {\n//   console.log(`Error! ${error}`);\n// };\n\n// // Method calls with callbacks\n// pizzaPalace.order('Smoked', makePizza, onOrderError);\n// pizzaPalace.order('Four meats', makePizza, onOrderError);\n// pizzaPalace.order('Big Mike', makePizza, onOrderError);\n// pizzaPalace.order('Vienna', makePizza, onOrderError);\n\n// const changeEven = (numbers, value) => {\n//   const evenNumbers = numbers.map(element => {\n//     if (element % 2 === 0) {\n//       element += value;\n//     }\n//     console.log(element);\n//     return element;\n//   });\n//   console.log(numbers);\n//   console.log(evenNumbers);\n// };\n\nfunction changeEven(numbers, value) {\n  // Change code below this line\n  numbers.forEach(number => {\n    const evenNumbers = [];\n    if (number % 2 === 0) {\n      number += value;\n      evenNumbers.push(number);\n    } else {\n      evenNumbers.push(number);\n    }\n    console.log(evenNumbers);\n    return evenNumbers;\n  });\n  // Change code above this line\n}\n\nchangeEven([1, 2, 3, 4, 5], 10);\n// changeEven([44, 13, 81, 92, 36, 54], 100);\n"],"names":["value","forEach","number","evenNumbers","push","console","log"],"version":3,"file":"index.4a1eab52.js.map"}