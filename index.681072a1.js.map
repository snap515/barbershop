{"mappings":"AAkDAA,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG,KAC/BF,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG,KAC/BF,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG,EAAG,GAAI,KACtCF,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,KACrCF,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,KACrCF,QAAQC,IAAIC,YAAY,CAAC,EAAG,EAAG","sources":["src/codewars.js"],"sourcesContent":["// ---------------------------------------------- CODEWARS JS FOR BEGINNERS  2 --------------------------------------------------------\n// не моё решение\n\n// function findOutlier(integers) {\n//   const [p0, p1, p2] = integers.slice(0, 3).map(n => n & 1);\n//   return p0 === p1\n//     ? integers.find(n => (n & 1) !== p0)\n//     : integers[+(p0 === p2)];\n// }\n\n// через сумму четных и нечетных чисел и сравнения их\n\n// function findOutlier(integers) {\n//   let even = 0;\n//   let notEven = 0;\n//   integers.forEach(integer =>\n//     integer % 2 === 0 ? (even += 1) : (notEven += 1)\n//   );\n//   return even > notEven\n//     ? integers.filter(integer => integer % 2 !== 0).join('')\n//     : integers.filter(integer => integer % 2 === 0).join('');\n// }\n\n// REDUCE через сумму четных и нечетных чисел и сравнения их (не доделал)\n\n// function findOutlier(integers) {\n//   let evenTotal = integers.reduce(integer);\n//   return evenTotal > notEvenTotal\n//     ? integers.filter(integer => integer % 2 !== 0).join('')\n//     : integers.filter(integer => integer % 2 === 0).join('');\n// }\n\n// через длину массива четных и нечетных чисел\n\n// function findOutlier(integers) {\n//   let even = integers.filter(integer => integer % 2 === 0);\n//   let notEven = integers.filter(integer => integer % 2 !== 0);\n//   // console.log(even);\n//   // console.log(notEven);\n//   return even.length < notEven.length ? even.join('') : notEven.join('');\n// }\n\n// через длину массива четных и нечетных чисел и тернатрный оператор\n\n// function findOutlier(integers) {\n//   return integers.filter(integer => integer % 2 === 0).length === 1\n//     ? integers.filter(integer => integer % 2 === 0).join('')\n//     : integers.filter(integer => integer % 2 !== 0).join('');\n// }\n\nconsole.log(findOutlier([0, 1, 2]));\nconsole.log(findOutlier([1, 2, 3]));\nconsole.log(findOutlier([2, 6, 8, 10, 3]));\nconsole.log(findOutlier([0, 0, 3, 0, 0]));\nconsole.log(findOutlier([1, 1, 0, 1, 1]));\nconsole.log(findOutlier([3, 4, 2]));\n"],"names":["console","log","findOutlier"],"version":3,"file":"index.681072a1.js.map"}