{"mappings":"YAmSA,IAkBMA,EAlBQ,CACZ,CACEC,MAAO,mBACPC,OAAQ,mBACRC,OAAQ,CAAC,YAAa,YAExB,CACEF,MAAO,sBACPC,OAAQ,kBACRC,OAAQ,CAAC,UAAW,cAEtB,CACEF,MAAO,oBACPC,OAAQ,aACRC,OAAQ,CAAC,SAAU,YAAa,eAIZC,SAAQ,SAAAC,G,OAAQA,EAAKF,UACvCG,EAAeN,EAAUO,QAC7B,SAACC,EAAOC,EAAOC,G,OAAUA,EAAMC,QAAQH,KAAWC,KAGpDG,QAAQC,IAAIb,GACZY,QAAQC,IAAIP,G","sources":["src/index.js"],"sourcesContent":["// const atTheOldToad = {\n//   potions: [\n//     { name: 'Speed potion', price: 460 },\n//     { name: 'Dragon breath', price: 780 },\n//     { name: 'Stone skin', price: 520 },\n//   ],\n//   // Change code below this line\n//   getPotions() {\n//     return this.potions;\n//   },\n//----------------------------------------------------------первый способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   for (const potion of this.potions) {\n//     if (newPotion.name === potion.name) {\n//       console.log(\n//         `Error! Potion ${newPotion.name} is already in your inventory!`\n//       );\n//       return;\n//     }\n//     this.potions.push(newPotion);\n//     console.log(this.potions);\n//   }\n\n//--------------------------------------------------------второй способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   const arrayNames = [];\n//   for (const potion of this.potions) {\n//     arrayNames.push(potion.name);\n//   }\n//   if (arrayNames.includes(newPotion.name)) {\n//     console.log(\n//       `Error! Potion ${newPotion.name} is already in your inventory!`\n//     );\n//     console.log(this.potions);\n//     return;\n//   }\n//   this.potions.push(newPotion);\n//   console.log(this.potions);\n//   return;\n\n// },\n\n//   removePotion(potionName) {\n//     const potionIndex = this.potions.indexOf(potionName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${potionName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1);\n//   },\n//   updatePotionName(oldName, newName) {\n//     const potionIndex = this.potions.indexOf(oldName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${oldName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1, newName);\n//   },\n//   // Change code above this line\n// };\n\n// atTheOldToad.addPotion({ name: 'Speed potion', price: 460 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'Stone skin', price: 520 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n\n// ------------------------------Callback функции---------------------------------------\n\n// const fnA = function (message, callback) {\n//   console.log(message);\n//   console.log(callback);\n// };\n\n// const fnB = function () {\n//   console.log('это лог вызова функции B');\n// };\n\n// fnA('hello my friend', fnB);\n\n// const doMath = function (a, b, callback) {\n//   const result = callback(a, b);\n//   console.log(result);\n// };\n\n// const add = function (x, y) {\n//   return x + y;\n// };\n\n// doMath(2, 14, add);\n\n// // Колбэк-функция\n// function greet(name) {\n//   console.log(`Добро пожаловать ${name}.`);\n// }\n\n// // Функция высшего порядка\n// function registerGuest(name, callback) {\n//   console.log(`Регистрируем гостя ${name}.`);\n//   callback(name);\n// }\n\n// registerGuest('Манго', greet);\n\n// const pizzaPalace = {\n//   pizzas: ['Ultracheese', 'Smoked', 'Four meats'],\n//   order(pizzaName, onSuccess, onError) {\n//     if (this.pizzas.includes(pizzaName)) {\n//       return makePizza();\n//     }\n//     return onOrderError();\n//   },\n// };\n// // Change code above this line\n\n// // Callback for onSuccess\n// const onSuccess = function makePizza(pizzaName) {\n//   console.log(`Your order is accepted. Cooking pizza ${pizzaName}.`);\n// };\n\n// // Callback for onError\n// const onError = function onOrderError(error) {\n//   console.log(`Error! ${error}`);\n// };\n\n// // Method calls with callbacks\n// pizzaPalace.order('Smoked', makePizza, onOrderError);\n// pizzaPalace.order('Four meats', makePizza, onOrderError);\n// pizzaPalace.order('Big Mike', makePizza, onOrderError);\n// pizzaPalace.order('Vienna', makePizza, onOrderError);\n\n// const changeEven = (numbers, value) => {\n//   return numbers.map(number => (number % 2 === 0 ? number + value : number));\n// };\n\n// function changeEven(numbers, value) {\n//   // Change code below this line\n//   let evenNumbers = [];\n//   numbers.forEach(number => {\n//     number % 2 === 0\n//       ? evenNumbers.push(number + value)\n//       : evenNumbers.push(number);\n//   });\n//   console.log(numbers);\n//   console.log(evenNumbers);\n//   return evenNumbers;\n//   // Change code above this line\n// }\n\n// console.log(changeEven([1, 2, 3, 4, 5], 10));\n// changeEven([44, 13, 81, 92, 36, 54], 100);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },\n// ];\n// // Change code below this line\n\n// const titles = books.map(book => book.title);\n// console.log(titles);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     genres: ['adventure', 'history'],\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     genres: ['fiction'],\n//   },\n//   {\n//     title: 'Redder Than Blood',\n//     author: 'Tanith Lee',\n//     genres: ['horror', 'mysticism'],\n//   },\n// ];\n// // Change code below this line\n\n// const genres = books.flatMap(book => book.genres);\n// console.log(genres);\n\n// const users = [\n//   {\n//     name: 'Moore Hensley',\n//     email: 'moorehensley@indexia.com',\n//     eyeColor: 'blue',\n//     friends: ['Sharron Pace'],\n//     isActive: false,\n//     balance: 2811,\n//     skills: ['ipsum', 'lorem'],\n//     gender: 'male',\n//     age: 37,\n//   },\n//   {\n//     name: 'Sharlene Bush',\n//     email: 'sharlenebush@tubesys.com',\n//     eyeColor: 'blue',\n//     friends: ['Briana Decker', 'Sharron Pace'],\n//     isActive: true,\n//     balance: 3821,\n//     skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],\n//     gender: 'female',\n//     age: 34,\n//   },\n//   {\n//     name: 'Ross Vazquez',\n//     email: 'rossvazquez@xinware.com',\n//     eyeColor: 'green',\n//     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],\n//     isActive: false,\n//     balance: 3793,\n//     skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],\n//     gender: 'male',\n//     age: 24,\n//   },\n//   {\n//     name: 'Elma Head',\n//     email: 'elmahead@omatom.com',\n//     eyeColor: 'green',\n//     friends: ['Goldie Gentry', 'Aisha Tran'],\n//     isActive: true,\n//     balance: 2278,\n//     skills: ['adipisicing', 'irure', 'velit'],\n//     gender: 'female',\n//     age: 21,\n//   },\n//   {\n//     name: 'Carey Barr',\n//     email: 'careybarr@nurali.com',\n//     eyeColor: 'blue',\n//     friends: ['Jordan Sampson', 'Eddie Strong'],\n//     isActive: true,\n//     balance: 3951,\n//     skills: ['ex', 'culpa', 'nostrud'],\n//     gender: 'male',\n//     age: 27,\n//   },\n//   {\n//     name: 'Blackburn Dotson',\n//     email: 'blackburndotson@furnigeer.com',\n//     eyeColor: 'brown',\n//     friends: ['Jacklyn Lucas', 'Linda Chapman'],\n//     isActive: false,\n//     balance: 1498,\n//     skills: ['non', 'amet', 'ipsum'],\n//     gender: 'male',\n//     age: 38,\n//   },\n//   {\n//     name: 'Sheree Anthony',\n//     email: 'shereeanthony@kog.com',\n//     eyeColor: 'brown',\n//     friends: ['Goldie Gentry', 'Briana Decker'],\n//     isActive: true,\n//     balance: 2764,\n//     skills: ['lorem', 'veniam', 'culpa'],\n//     gender: 'female',\n//     age: 39,\n//   },\n// ];\n\n// const getUserNames = users => {\n//   const userNames = users.map(user => user.name);\n//   console.log(userNames);\n//   return userNames;\n// };\n\n// getUserNames(users);\n\nconst books = [\n  {\n    title: 'The Last Kingdom',\n    author: 'Bernard Cornwell',\n    genres: ['adventure', 'history'],\n  },\n  {\n    title: 'Beside Still Waters',\n    author: 'Robert Sheckley',\n    genres: ['fiction', 'mysticism'],\n  },\n  {\n    title: 'Redder Than Blood',\n    author: 'Tanith Lee',\n    genres: ['horror', 'mysticism', 'adventure'],\n  },\n];\n// Change code below this line\nconst allGenres = books.flatMap(book => book.genres);\nconst uniqueGenres = allGenres.filter(\n  (genre, index, array) => array.indexOf(genre) === index\n);\n\nconsole.log(allGenres);\nconsole.log(uniqueGenres);\n"],"names":["$b8f9b7833fa37166$var$allGenres","title","author","genres","flatMap","book","$b8f9b7833fa37166$var$uniqueGenres","filter","genre","index","array","indexOf","console","log"],"version":3,"file":"index.1063d4e3.js.map"}