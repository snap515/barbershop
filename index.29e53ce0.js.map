{"mappings":"YA6TA,IAAMA,EAAQ,CACZ,CACEC,KAAM,gBACNC,MAAO,2BACPC,SAAU,OACVC,QAAS,CAAC,gBACVC,UAAU,EACVC,QAAS,KACTC,OAAQ,OACRC,IAAK,IAEP,CACEP,KAAM,gBACNC,MAAO,2BACPC,SAAU,OACVC,QAAS,CAAC,gBAAiB,gBAC3BC,UAAU,EACVC,QAAS,KACTC,OAAQ,SACRC,IAAK,IAEP,CACEP,KAAM,eACNC,MAAO,0BACPC,SAAU,QACVC,QAAS,CAAC,mBAAoB,mBAAoB,iBAClDC,UAAU,EACVC,QAAS,KACTC,OAAQ,OACRC,IAAK,IAEP,CACEP,KAAM,YACNC,MAAO,sBACPC,SAAU,QACVC,QAAS,CAAC,gBAAiB,cAC3BC,UAAU,EACVC,QAAS,KACTC,OAAQ,SACRC,IAAK,IAEP,CACEP,KAAM,aACNC,MAAO,uBACPC,SAAU,OACVC,QAAS,CAAC,iBAAkB,gBAC5BC,UAAU,EACVC,QAAS,KACTC,OAAQ,OACRC,IAAK,IAEP,CACEP,KAAM,mBACNC,MAAO,gCACPC,SAAU,QACVC,QAAS,CAAC,gBAAiB,iBAC3BC,UAAU,EACVC,QAAS,KACTC,OAAQ,OACRC,IAAK,IAEP,CACEP,KAAM,iBACNC,MAAO,wBACPC,SAAU,QACVC,QAAS,CAAC,gBAAiB,iBAC3BC,UAAU,EACVC,QAAS,KACTC,OAAQ,SACRC,IAAK,KA+EHC,EAA0B,SAACC,EAAOH,GACtC,IAAMI,EAAiBD,EAAME,QAAO,SAAAC,G,OAAQA,EAAKN,SAAWA,KAC5DO,QAAQC,IAAI,oBAA0CC,OAAPT,EAAO,UAAaI,GAChD,IAAbM,EAAeN,EAAeO,QAClC,SAACC,EAAcN,G,OAASM,EAAeN,EAAKP,UAC5C,GAEFQ,QAAQC,IAAI,kBAAyBC,OAAPT,EAAO,OAAMU,IAG7CR,EAAwBT,EAAO,QAC/BS,EAAwBT,EAAO,U","sources":["src/index.js"],"sourcesContent":["// const atTheOldToad = {\n//   potions: [\n//     { name: 'Speed potion', price: 460 },\n//     { name: 'Dragon breath', price: 780 },\n//     { name: 'Stone skin', price: 520 },\n//   ],\n//   // Change code below this line\n//   getPotions() {\n//     return this.potions;\n//   },\n//----------------------------------------------------------первый способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   for (const potion of this.potions) {\n//     if (newPotion.name === potion.name) {\n//       console.log(\n//         `Error! Potion ${newPotion.name} is already in your inventory!`\n//       );\n//       return;\n//     }\n//     this.potions.push(newPotion);\n//     console.log(this.potions);\n//   }\n\n//--------------------------------------------------------второй способ \"добавить зелье\"\n// addPotion(newPotion) {\n//   const arrayNames = [];\n//   for (const potion of this.potions) {\n//     arrayNames.push(potion.name);\n//   }\n//   if (arrayNames.includes(newPotion.name)) {\n//     console.log(\n//       `Error! Potion ${newPotion.name} is already in your inventory!`\n//     );\n//     console.log(this.potions);\n//     return;\n//   }\n//   this.potions.push(newPotion);\n//   console.log(this.potions);\n//   return;\n\n// },\n\n//   removePotion(potionName) {\n//     const potionIndex = this.potions.indexOf(potionName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${potionName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1);\n//   },\n//   updatePotionName(oldName, newName) {\n//     const potionIndex = this.potions.indexOf(oldName);\n\n//     if (potionIndex === -1) {\n//       return `Potion ${oldName} is not in inventory!`;\n//     }\n\n//     this.potions.splice(potionIndex, 1, newName);\n//   },\n//   // Change code above this line\n// };\n\n// atTheOldToad.addPotion({ name: 'Speed potion', price: 460 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n// atTheOldToad.addPotion({ name: 'Dragon breath', price: 780 });\n// atTheOldToad.addPotion({ name: 'Stone skin', price: 520 });\n// atTheOldToad.addPotion({ name: 'plotva', price: 460 });\n// atTheOldToad.addPotion({ name: 'zelie', price: 460 });\n\n// ------------------------------Callback функции---------------------------------------\n\n// const fnA = function (message, callback) {\n//   console.log(message);\n//   console.log(callback);\n// };\n\n// const fnB = function () {\n//   console.log('это лог вызова функции B');\n// };\n\n// fnA('hello my friend', fnB);\n\n// const doMath = function (a, b, callback) {\n//   const result = callback(a, b);\n//   console.log(result);\n// };\n\n// const add = function (x, y) {\n//   return x + y;\n// };\n\n// doMath(2, 14, add);\n\n// // Колбэк-функция\n// function greet(name) {\n//   console.log(`Добро пожаловать ${name}.`);\n// }\n\n// // Функция высшего порядка\n// function registerGuest(name, callback) {\n//   console.log(`Регистрируем гостя ${name}.`);\n//   callback(name);\n// }\n\n// registerGuest('Манго', greet);\n\n// const pizzaPalace = {\n//   pizzas: ['Ultracheese', 'Smoked', 'Four meats'],\n//   order(pizzaName, onSuccess, onError) {\n//     if (this.pizzas.includes(pizzaName)) {\n//       return makePizza();\n//     }\n//     return onOrderError();\n//   },\n// };\n// // Change code above this line\n\n// // Callback for onSuccess\n// const onSuccess = function makePizza(pizzaName) {\n//   console.log(`Your order is accepted. Cooking pizza ${pizzaName}.`);\n// };\n\n// // Callback for onError\n// const onError = function onOrderError(error) {\n//   console.log(`Error! ${error}`);\n// };\n\n// // Method calls with callbacks\n// pizzaPalace.order('Smoked', makePizza, onOrderError);\n// pizzaPalace.order('Four meats', makePizza, onOrderError);\n// pizzaPalace.order('Big Mike', makePizza, onOrderError);\n// pizzaPalace.order('Vienna', makePizza, onOrderError);\n\n// const changeEven = (numbers, value) => {\n//   return numbers.map(number => (number % 2 === 0 ? number + value : number));\n// };\n\n// function changeEven(numbers, value) {\n//   // Change code below this line\n//   let evenNumbers = [];\n//   numbers.forEach(number => {\n//     number % 2 === 0\n//       ? evenNumbers.push(number + value)\n//       : evenNumbers.push(number);\n//   });\n//   console.log(numbers);\n//   console.log(evenNumbers);\n//   return evenNumbers;\n//   // Change code above this line\n// }\n\n// console.log(changeEven([1, 2, 3, 4, 5], 10));\n// changeEven([44, 13, 81, 92, 36, 54], 100);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },\n// ];\n// // Change code below this line\n\n// const titles = books.map(book => book.title);\n// console.log(titles);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     genres: ['adventure', 'history'],\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     genres: ['fiction'],\n//   },\n//   {\n//     title: 'Redder Than Blood',\n//     author: 'Tanith Lee',\n//     genres: ['horror', 'mysticism'],\n//   },\n// ];\n// // Change code below this line\n\n// const genres = books.flatMap(book => book.genres);\n// console.log(genres);\n\n// const users = [\n//   {\n//     name: 'Moore Hensley',\n//     email: 'moorehensley@indexia.com',\n//     eyeColor: 'blue',\n//     friends: ['Sharron Pace'],\n//     isActive: false,\n//     balance: 2811,\n//     skills: ['ipsum', 'lorem'],\n//     gender: 'male',\n//     age: 37,\n//   },\n//   {\n//     name: 'Sharlene Bush',\n//     email: 'sharlenebush@tubesys.com',\n//     eyeColor: 'blue',\n//     friends: ['Briana Decker', 'Sharron Pace'],\n//     isActive: true,\n//     balance: 3821,\n//     skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],\n//     gender: 'female',\n//     age: 34,\n//   },\n//   {\n//     name: 'Ross Vazquez',\n//     email: 'rossvazquez@xinware.com',\n//     eyeColor: 'green',\n//     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],\n//     isActive: false,\n//     balance: 3793,\n//     skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],\n//     gender: 'male',\n//     age: 24,\n//   },\n//   {\n//     name: 'Elma Head',\n//     email: 'elmahead@omatom.com',\n//     eyeColor: 'green',\n//     friends: ['Goldie Gentry', 'Aisha Tran'],\n//     isActive: true,\n//     balance: 2278,\n//     skills: ['adipisicing', 'irure', 'velit'],\n//     gender: 'female',\n//     age: 21,\n//   },\n//   {\n//     name: 'Carey Barr',\n//     email: 'careybarr@nurali.com',\n//     eyeColor: 'blue',\n//     friends: ['Jordan Sampson', 'Eddie Strong'],\n//     isActive: true,\n//     balance: 3951,\n//     skills: ['ex', 'culpa', 'nostrud'],\n//     gender: 'male',\n//     age: 27,\n//   },\n//   {\n//     name: 'Blackburn Dotson',\n//     email: 'blackburndotson@furnigeer.com',\n//     eyeColor: 'brown',\n//     friends: ['Jacklyn Lucas', 'Linda Chapman'],\n//     isActive: false,\n//     balance: 1498,\n//     skills: ['non', 'amet', 'ipsum'],\n//     gender: 'male',\n//     age: 38,\n//   },\n//   {\n//     name: 'Sheree Anthony',\n//     email: 'shereeanthony@kog.com',\n//     eyeColor: 'brown',\n//     friends: ['Goldie Gentry', 'Briana Decker'],\n//     isActive: true,\n//     balance: 2764,\n//     skills: ['lorem', 'veniam', 'culpa'],\n//     gender: 'female',\n//     age: 39,\n//   },\n// ];\n\n// const getUserNames = users => {\n//   const userNames = users.map(user => user.name);\n//   console.log(userNames);\n//   return userNames;\n// };\n\n// getUserNames(users);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     genres: ['adventure', 'history'],\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     genres: ['fiction', 'mysticism'],\n//   },\n//   {\n//     title: 'Redder Than Blood',\n//     author: 'Tanith Lee',\n//     genres: ['horror', 'mysticism', 'adventure'],\n//   },\n// ];\n// // Change code below this line\n// const allGenres = books.flatMap(book => book.genres);\n// const uniqueGenres = allGenres.filter(\n//   (genre, index, array) => array.indexOf(genre) === index\n// );\n\n// console.log(allGenres);\n// console.log(uniqueGenres);\n\nconst users = [\n  {\n    name: 'Moore Hensley',\n    email: 'moorehensley@indexia.com',\n    eyeColor: 'blue',\n    friends: ['Sharron Pace'],\n    isActive: false,\n    balance: 2811,\n    gender: 'male',\n    age: 37,\n  },\n  {\n    name: 'Sharlene Bush',\n    email: 'sharlenebush@tubesys.com',\n    eyeColor: 'blue',\n    friends: ['Briana Decker', 'Sharron Pace'],\n    isActive: true,\n    balance: 3821,\n    gender: 'female',\n    age: 34,\n  },\n  {\n    name: 'Ross Vazquez',\n    email: 'rossvazquez@xinware.com',\n    eyeColor: 'green',\n    friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],\n    isActive: false,\n    balance: 3793,\n    gender: 'male',\n    age: 24,\n  },\n  {\n    name: 'Elma Head',\n    email: 'elmahead@omatom.com',\n    eyeColor: 'green',\n    friends: ['Goldie Gentry', 'Aisha Tran'],\n    isActive: true,\n    balance: 2278,\n    gender: 'female',\n    age: 21,\n  },\n  {\n    name: 'Carey Barr',\n    email: 'careybarr@nurali.com',\n    eyeColor: 'blue',\n    friends: ['Jordan Sampson', 'Eddie Strong'],\n    isActive: true,\n    balance: 3951,\n    gender: 'male',\n    age: 27,\n  },\n  {\n    name: 'Blackburn Dotson',\n    email: 'blackburndotson@furnigeer.com',\n    eyeColor: 'brown',\n    friends: ['Jacklyn Lucas', 'Linda Chapman'],\n    isActive: false,\n    balance: 1498,\n    gender: 'male',\n    age: 38,\n  },\n  {\n    name: 'Sheree Anthony',\n    email: 'shereeanthony@kog.com',\n    eyeColor: 'brown',\n    friends: ['Goldie Gentry', 'Briana Decker'],\n    isActive: true,\n    balance: 2764,\n    gender: 'female',\n    age: 39,\n  },\n];\n\n// const getFriends = users => {\n//   const allFriends = users.flatMap(user => user.friends);\n//   console.log(allFriends);\n//   const filterFriends = allFriends.filter(\n//     (friend, index, array) => array.indexOf(friend) === index\n//   );\n//   console.log(filterFriends);\n//   return filterFriends;\n// };\n\n// getFriends(users);\n\n// const getActiveUsers = users => {\n//   const activeUsers = users.filter(user => user.isActive);\n//   console.table(activeUsers);\n//   return activeUsers;\n// };\n\n// getActiveUsers(users);\n\n// const players = [\n//   { name: 'Mango', playtime: 1270, gamesPlayed: 4 },\n//   { name: 'Poly', playtime: 469, gamesPlayed: 2 },\n//   { name: 'Ajax', playtime: 690, gamesPlayed: 3 },\n//   { name: 'Kiwi', playtime: 241, gamesPlayed: 1 },\n// ];\n// // Change code below this line\n// const totalAveragePlaytimePerGame = players.reduce((totalTime, player) => {\n//   return totalTime + player.playtime / player.gamesPlayed;\n// }, 0);\n// console.log(totalAveragePlaytimePerGame);\n\n// const books = [\n//   {\n//     title: 'The Last Kingdom',\n//     author: 'Bernard Cornwell',\n//     rating: 8.38,\n//   },\n//   {\n//     title: 'Beside Still Waters',\n//     author: 'Robert Sheckley',\n//     rating: 8.51,\n//   },\n//   {\n//     title: 'The Dream of a Ridiculous Man',\n//     author: 'Fyodor Dostoevsky',\n//     rating: 7.75,\n//   },\n//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n//   {\n//     title: 'The Dreams in the Witch House',\n//     author: 'Howard Lovecraft',\n//     rating: 8.67,\n//   },\n// ];\n// const MIN_BOOK_RATING = 8;\n\n// const names = books\n//   .filter(book => book.rating > MIN_BOOK_RATING)\n//   .map(book => book.author)\n//   .sort((prevAuthor, nextAuthor) => prevAuthor.localeCompare(nextAuthor));\n// console.log(names);\n\n// const getSortedFriends = users => {\n//   const sortFriends = users\n//     .map(user => user.name)\n//     .filter((name, index, array) => array.indexOf(name) === index)\n//     .sort((prevName, nextName) => prevName.localeCompare(nextName));\n//   console.log(sortFriends);\n//   return sortFriends;\n// };\n\n// getSortedFriends(users);\n\n//4 модуль 48 из 48\nconst getTotalBalanceByGender = (users, gender) => {\n  const filterByGender = users.filter(user => user.gender === gender);\n  console.log(`отфильтровано по ${gender} полу:`, filterByGender);\n  const totalBalance = filterByGender.reduce(\n    (totalBalance, user) => totalBalance + user.balance,\n    0\n  );\n  console.log(`общий баланс у ${gender} = `, totalBalance);\n};\n\ngetTotalBalanceByGender(users, 'male');\ngetTotalBalanceByGender(users, 'female');\n"],"names":["$b8f9b7833fa37166$var$users","name","email","eyeColor","friends","isActive","balance","gender","age","$b8f9b7833fa37166$var$getTotalBalanceByGender","users1","filterByGender","filter","user","console","log","concat","totalBalance1","reduce","totalBalance"],"version":3,"file":"index.29e53ce0.js.map"}